kind: Service
apiVersion: v1
metadata:
  name: rabbitmq
spec:
  clusterIP: None  # We need a headless service to allow the pods to discover each
  ports:           # other during autodiscover phase for cluster creation.
   - name: http    # A ClusterIP will prevent resolving dns requests for other pods
     protocol: TCP # under the same service.
     port: 15672
     targetPort: 15672
   - name: amqp
     protocol: TCP
     port: 5672
     targetPort: 5672
  selector:
    app: rabbitmq
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: rabbitmq
        image: foxylion/rabbitmq:3.6-autocluster
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
        readinessProbe:           # This readiness probe will delay the startup of the nex pod for 30 seconds. It ensures
          exec:                   # the node is most probably in a state that let the next node connect to this one.
            command: ["true"]     # Doing a real liveness or readiness probe will result in a stuck statfult set if the
          initialDelaySeconds: 30 # cluster is in a "pause_minority" state. In this state all health checks provided
          timeoutSeconds: 5       # by rabbitmq will fail, but the node should _not_ be restarted.
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_NAME).rabbitmq.default.svc.cluster.local"
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_VM_MEMORY_HIGH_WATERMARK
            value: "0.49"
          - name: RABBITMQ_CLUSTER_PARTITION_HANDLING
            value: pause_minority
          - name: RABBITMQ_ERLANG_COOKIE
            value: erlang-cookie-placeholder
          - name: RABBITMQ_DEFAULT_USER
            value: admin
          - name: RABBITMQ_DEFAULT_PASS
            value: admin
          - name: AUTOCLUSTER_TYPE
            value: "k8s"
          - name: AUTOCLUSTER_DELAY
            value: "10"
          - name: AUTOCLUSTER_FAILURE
            value: 'stop'
          - name: AUTOCLUSTER_LOG_LEVEL
            value: debug
          - name: CLEANUP_WARN_ONLY
            value: "false"
          - name: K8S_ADDRESS_TYPE
            value: "hostname"
          - name: K8S_HOSTNAME_SUFFIX
            value: ".rabbitmq.default.svc.cluster.local"
        volumeMounts:
        - name: rabbitmq
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq
        hostPath:
          # directory location on host, pre mkdir -p /var/lib/rabbitmq/data
          path: /var/lib/rabbitmq/data
          # this field is optional
          type: Directory